{
    "swagger": "2.0",
    "info": {
        "version": "2.0",
        "title": "Order Management Service",
        "description": "Order Management Service",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:8083",
    "basePath": "/order",
    "paths": {
        "/": {
            "post": {
                "summary": "Place a new Order",
                "description": "Place a new Order",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Order Details including Customer ID and Restaurant ID",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/OrderCreate"
                        }
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Placed Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SuccessResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "401": {
                        "description": "UnAuthorized",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "Entity Not Found",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity Error",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        },
        "/{orderId}": {
            "get": {
                "summary": "Get the Order Details",
                "description": "Get the Order Details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId that needs to be viewed",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Fetched Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SuccessResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "401": {
                        "description": "UnAuthorized",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "Entity Not Found",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity Error",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Cancel the Order",
                "description": "Cancel the Order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "orderId that needs to be canceled",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Authorization token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order Placed Successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SuccessResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "401": {
                        "description": "UnAuthorized",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "404": {
                        "description": "Entity Not Found",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity Error",
                        "schema": {
                            "$ref": "#/definitions/InvalidResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "OrderCreate": {
            "type": "object",
            "properties": {
                "restaurantId": {
                    "type": "integer"
                },
                "customerId": {
                    "type": "integer"
                },
                "OrderItems": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "array"
                },
                "OrderItems": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "total_amount": {
                    "type": "integer"
                },
                "restaurantId": {
                    "type": "integer"
                },
                "customerId": {
                    "type": "integer"
                }
            }
        },
        "InvalidResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "SuccessResponse": {
            "type": "object",
            "properties": {
                "statusCode": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ]
}