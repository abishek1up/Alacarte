paths:
  /customer/{customerId}:           # path of the user from your endpoint
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - Customer            # Value of the tag
      summary: Customer Details fetch
      produces:
      - application/json
      parameters:       # request parameters
      - in: path
        name: customerId     # name of request, can be any name
        description: It enables a user to create an account
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
           type: integer
      responses:          # server responses
        200:
          description: An object with Customer details
    put:                 # endpoint request type (post request)
      tags:               # Tag property
        - Customer            # Value of the tag
      summary: Customer Details Update
      produces:
      - application/json
      parameters: 
      - in: path          # request body
        name: customerId     # name of request, can be any name
        description: It enables a user to update the details by customer id
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: integer        # request parameters
      - in: body          # request body
        name: body     # name of request, can be any name
        description: It enables a user to update the details
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
           $ref: '#/definitions/CustomerUpdate' 
      responses:          # server responses
        200:
          description: It enables a user to update the details
    delete:                 # endpoint request type (post request)
      tags:               # Tag property
        - Customer            # Value of the tag
      summary: Deactivate Customer
      produces:
      - application/json
      parameters:         # request parameters
      - in: path          # request body
        name: customerId     # name of request, can be any name
        description: It enables a user to update the details by customer id
        required: true   # can also be true depending on user preference
        schema:           # Schema definition
          type: integer        # request parameters
      responses:          # server responses
        200:
          description: An object with user details

definitions:        # Schema defination for request body
  Customer:
    type: object
    properties:
      customerId:
        type: integer
      customerName:
        type: string
      location:
        type: object
        properties: 
          city:
            type: string
          state:
            type: string
  CustomerUpdate:
    type: object
    properties:
      customerName:
        type: string
      location:
        type: object
        properties: 
          city:
            type: string
          state:
            type: string